<?xml version="1.0" encoding="utf-8"?>
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" 
			 xmlns:s="library://ns.adobe.com/flex/spark" 
			 xmlns:mx="library://ns.adobe.com/flex/mx"
			 xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
			 alpha.disabled="0.5" minWidth="89" minHeight="84" xmlns:local="*" xmlns:dataGrid="ui.dataGrid.*">
	
	<fx:Metadata>
		<![CDATA[
		[HostComponent("spark.components.DataGrid")]
		]]>
	</fx:Metadata>
	
	<s:states>
		<s:State name="normal" />
		<s:State name="disabled" />
	</s:states>
	
	<fx:Declarations>
		<!--- @private -->        
		<fx:Component id="alternatingRowColorsBackground">
			<s:Rect implements="spark.components.gridClasses.IGridVisualElement">
				<fx:Script>
					<![CDATA[
						import spark.components.DataGrid;
						import spark.components.Grid;
						
						/**
						 * @private
						 */
						public function prepareGridVisualElement(grid:Grid, rowIndex:int, columnIndex:int):void
						{
							const dataGrid:DataGrid = grid.dataGrid;
							if (!dataGrid)
								return;
							
							const colors:Array = dataGrid.getStyle("alternatingRowColors");
							if (colors && (colors.length > 0))
							{
								dataGrid.styleManager.getColorNames(colors); // lazily replace color names with ints
								rowBackgroundFillColor.color = colors[rowIndex % colors.length];
							}
							else
							{          
								// This should be the same as bgFill.color.
								rowBackgroundFillColor.color = 0xFFFFFF;
							}
						}
					]]>
				</fx:Script>  
				<s:fill>
					<!--- @private -->   
					<s:SolidColor id="rowBackgroundFillColor" color="0xFFFFFF"/>
				</s:fill>
			</s:Rect>
		</fx:Component>
		
		
		
		<!--- @private -->    
		
		<fx:Component id="caretIndicator">
			<s:Group>
				
				<!--Black rectangle -->
				<s:Rect  width="100%" height="100%" left="-2" right="-2" top="0" bottom="-2" >
					<s:stroke>
						<!--- @private -->
						<s:SolidColorStroke  color="0x000000" weight="3"/>
					</s:stroke>
				</s:Rect>
				<!-- Right bottom rectangle-->
				<s:BitmapImage right="-1" bottom="-1" source="@Embed('assets/icons/DataGrid/dataGridCaretRect.png')"/>
				
			</s:Group>
			
		</fx:Component>
		
		
		<!--- @private -->
		<fx:Component id="columnSeparator">
			<s:Line>
				<s:stroke>
					<s:SolidColorStroke color="0xE6E6E6" weight="1" caps="square"/>
				</s:stroke>
			</s:Line>
		</fx:Component>
		
		<!--- Defines the value of the columnSeparator property for the columnHeaderGroup. -->
		<fx:Component id="headerColumnSeparator">
			<s:Line>
				<s:stroke>
					<s:SolidColorStroke color="#d0d7e5" weight="1" caps="square"/>
				</s:stroke>
			</s:Line>
		</fx:Component>
		
		<!--- Defines the value of the headerRenderer property for the columnHeaderGroup. 
		The default is spark.skins.spark.DefaultGridHeaderRenderer -->
		<fx:Component id="headerRenderer">
			<dataGrid:DataGridHeaderRenderer/>
			
		</fx:Component>
		
		
		
		<!--- @private -->
		<fx:Component id="hoverIndicator">
			<s:Rect implements="spark.components.gridClasses.IGridVisualElement">
				<fx:Script>
					<![CDATA[
						import spark.components.DataGrid;
						import spark.components.Grid;
						
						/**
						 * @private
						 */
						public function prepareGridVisualElement(grid:Grid, rowIndex:int, columnIndex:int):void
						{
							const dataGrid:DataGrid = grid.dataGrid;
							if (!dataGrid)
								return;
							
							const color:uint = dataGrid.getStyle("rollOverColor");
							hoverIndicatorFill.color = color;
						}
					]]>
				</fx:Script>
				
				<s:fill>
					<!--- @private -->
					<s:SolidColor id="hoverIndicatorFill" color="0xCEDBEF"/>
				</s:fill>
			</s:Rect>
		</fx:Component>
		
		<!--- @private -->
		
		<fx:Component id="rowSeparator">
			<s:Line>
				<s:stroke>
					<s:SolidColorStroke color="#d0d7e5" weight="1" caps="square"/>
				</s:stroke>
			</s:Line>
		</fx:Component>
		
		
		<!--- @private -->
		<fx:Component id="selectionIndicator">
			<s:Rect implements="spark.components.gridClasses.IGridVisualElement">
				<fx:Script>
					<![CDATA[
						import spark.components.DataGrid;
						import spark.components.Grid;
						
						/**
						 * @private
						 */
						public function prepareGridVisualElement(grid:Grid, rowIndex:int, columnIndex:int):void
						{
							const dataGrid:DataGrid = grid.dataGrid;
							if (!dataGrid)
								return;
							
							const color:uint = dataGrid.getStyle("selectionColor");
							selectionIndicatorFill.color = color;
						}
					]]>
				</fx:Script>
				
				<s:fill>
					<!--- @private -->
					<s:SolidColor id="selectionIndicatorFill" color="0xA8C6EE"/>
				</s:fill>                
			</s:Rect>
		</fx:Component>
		
		
		<!--- @private -->
		<fx:Component id="editorIndicator">
			<s:Rect>
				<s:fill>
					<s:SolidColor color="0xFFFFFF"/>
				</s:fill>                
			</s:Rect>
		</fx:Component>                    
		
	</fx:Declarations>
	
	
	<!-- border -->
	<!--- @private -->
	<s:Rect left="0" right="0" top="0" bottom="0" id="border">
		<s:stroke>
			<!--- @private -->
			<s:SolidColorStroke id="borderStroke" weight="1"/>
		</s:stroke>
	</s:Rect>   
	
	<!-- column header, content -->
	<s:VGroup horizontalAlign="justify" gap="0" left="0" right="0" top="0" bottom="0">
		
		<!--- @private -->
		<s:GridColumnHeaderGroup id="columnHeaderGroup"
								 paddingLeft="1" paddingTop="1" paddingRight="1" minHeight="21" 
								 columnSeparator="{headerColumnSeparator}"
								 headerRenderer="{headerRenderer}"/>
		
		<s:Group height="100%">
			
			<!--- @private -->
			<s:Rect id="background" left="1" right="1" top="1" bottom="1" >
				<s:fill>
					<!--- Defines the color of the background. The default color is 0xFFFFFF. -->
					<s:SolidColor id="bgFill" color="0xFFFFFF" />
				</s:fill>
			</s:Rect>
			
			<!-- header separator, scroller and grid -->
			<s:VGroup horizontalAlign="justify" height="100%" width="100%" gap="-1">
				<!--- @private -->
				<s:Line id="headerSeparator">
					<s:stroke>
						<s:SolidColorStroke color="#d0d7e5" weight="1" caps="square"/>
					</s:stroke>
				</s:Line>          
				
				<!--- @private -->
				<s:Scroller id="scroller" minViewportInset="1" hasFocusableChildren="false" height="100%">
					<!--- @private -->
					<s:Grid id="grid" itemRenderer="spark.skins.spark.DefaultGridItemRenderer">
						<s:GridLayer name="backgroundLayer"/>
						<s:GridLayer name="selectionLayer"/>
						<s:GridLayer name="editorIndicatorLayer"/>                            
						<s:GridLayer name="rendererLayer"/>
						<s:GridLayer name="overlayLayer"/>
					</s:Grid>             
					
				</s:Scroller>
			</s:VGroup>
			
		</s:Group>
		
	</s:VGroup>
	
	 
	
</s:SparkSkin>